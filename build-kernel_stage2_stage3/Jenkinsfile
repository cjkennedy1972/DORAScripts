def label = "mypod-${UUID.randomUUID().toString()}"
// Create pod template using desired image.
podTemplate(label: label, containers: [
    containerTemplate(name: 'jnlp', image: '10.21.236.86:5000/jnlp-slave-sudo', alwaysPullImage: true, args: '${computer.jnlpmac} ${computer.name}', workingDir: '/home/jenkins/dev-jenkins/'+env.BUILD_NUMBER),
    containerTemplate(name: 'stage-cd', image: '10.21.236.86:5000/purestorage/vagrant:latest', alwaysPullImage: true, workingDir: '/home/jenkins/dev-jenkins/'+env.BUILD_NUMBER,  ttyEnabled: true, command: 'cat')
    ], 
    //mounting the flashblade volume on pod
    volumes: [
    persistentVolumeClaim(mountPath: '/home/jenkins/dev-jenkins', claimName: 'dev-jenkins', readOnly: false)
    ],
    imagePullSecrets: [ 'myregistrykey' ])
   
    {
    node(label) {
        //Installing the vagrant plugin on container
        container('stage-cd'){
            println 'Stage 2 - CD'

            if ((env.BUILD_ID.toInteger() % 1) == 0) {
                sh 'vagrant plugin install vagrant-vsphere > /dev/null '
                //cloning the stage-cd repo having vagrantfile and bootstrap script
                stage('Clone Repository') {
                    git branch: 'master', credentialsId: '4063a731-7121-487c-918c-93c2f103d1c7', url: 'http://10.21.236.87:8080/root/stage-cd.git'
                    
                }
                dir('stage2'){
                    //launching the base VM and installing the kernel
                    stage('Launch VM') {
                        
                        sh "sed -i 's/pure-storage-vm/pure-storage-vm-${BUILD_NUMBER}/g' Vagrantfile"
                        sh "sed -i 's/1.0.0.6/1.0.0.${KERNEL_BUILD}/g' bootstrap.sh"
                        sh "sed -i 's/0.0.0.0/${NEXUS_IP}/g' bootstrap.sh"
                        sh 'vagrant up --provider=vsphere'
                    }
                }
                dir('stage3'){
                    //creating no of vms and execute the mysqlslap queries on startup
                    stage('Execute Queries') {
                        
                        sh "sed -i 's/pure-storage-vm/pure-storage-vm-${BUILD_NUMBER}/g' Vagrantfile"
                        sh "sed -i 's/NODE_COUNT = 3/NODE_COUNT = ${NO_OF_VMS}/g' Vagrantfile"
                        sh 'vagrant up --provider=vsphere'
                    }
                }
    
            } else {
                echo 'This did not clear - show disk free'
                sh 'df'
            }
        }
    }
  }
