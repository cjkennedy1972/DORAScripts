<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.23">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.9">
      <gitLabConnection>gitlab</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>NEXUS_IP</name>
          <description>Nexus service IP address where we publish the compiled kernel as an artifact</description>
          <defaultValue>10.21.236.86</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.5.9">
          <spec></spec>
          <triggerOnPush>true</triggerOnPush>
          <triggerOnMergeRequest>true</triggerOnMergeRequest>
          <triggerOnPipelineEvent>false</triggerOnPipelineEvent>
          <triggerOnAcceptedMergeRequest>false</triggerOnAcceptedMergeRequest>
          <triggerOnClosedMergeRequest>false</triggerOnClosedMergeRequest>
          <triggerOnApprovedMergeRequest>true</triggerOnApprovedMergeRequest>
          <triggerOpenMergeRequestOnPush>never</triggerOpenMergeRequestOnPush>
          <triggerOnNoteRequest>true</triggerOnNoteRequest>
          <noteRegex>Jenkins please retry a build</noteRegex>
          <ciSkip>true</ciSkip>
          <skipWorkInProgressMergeRequest>true</skipWorkInProgressMergeRequest>
          <setBuildDescription>true</setBuildDescription>
          <branchFilterType>All</branchFilterType>
          <includeBranchesSpec></includeBranchesSpec>
          <excludeBranchesSpec></excludeBranchesSpec>
          <targetBranchRegex></targetBranchRegex>
          <secretToken>{AQAAABAAAAAwQWeVZonCrYFzNdV/e7VbxKHdGHcy8vLMWcSbfjKqt46imAdoGTXqWAkD0resS+9c/q3mMHLgZ/mT8Nra5Skepw==}</secretToken>
          <pendingBuildName></pendingBuildName>
          <cancelPendingBuildsOnUpdate>false</cancelPendingBuildsOnUpdate>
        </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57">
    <script>def label = &quot;purepod-${UUID.randomUUID().toString()}&quot;
// Create pod template using desired image.
podTemplate(label: label, containers: [
//    containerTemplate(name: &apos;jnlp&apos;, image: &apos;10.21.236.86:5000/jnlp-slave-sudo&apos;, alwaysPullImage: true,privileged: true, args: &apos;${computer.jnlpmac} ${computer.name}&apos;, workingDir: &apos;/home/jenkins/dev-jenkins/&apos;+env.BUILD_NUMBER),
//    containerTemplate(name: &apos;buildubuntu&apos;, image: &apos;10.21.236.86:5000/build-kernel-nocache&apos;, alwaysPullImage: true,privileged: true, workingDir: &apos;/home/jenkins/dev-jenkins/&apos;+env.BUILD_NUMBER,  ttyEnabled: true, command: &apos;cat&apos;),
    containerTemplate(name: &apos;jnlp&apos;, image: &apos;10.21.236.86:5000/jnlp-slave-sudo&apos;, alwaysPullImage: true,privileged: true, args: &apos;${computer.jnlpmac} ${computer.name}&apos;, workingDir: &apos;/home/jenkins/dev-jenkins&apos;),
    containerTemplate(name: &apos;buildubuntu&apos;, image: &apos;10.21.236.86:5000/build-kernel&apos;, alwaysPullImage: true,privileged: true, workingDir: &apos;/home/jenkins/dev-jenkins&apos;,  ttyEnabled: true, command: &apos;cat&apos;),
   // containerTemplate(name: &apos;stage-cd&apos;, image: &apos;10.21.236.86:5000/purestorage/vagrant:latest&apos;, alwaysPullImage: true, workingDir: &apos;/home/jenkins/dev-jenkins/&apos;+env.BUILD_NUMBER,  ttyEnabled: true, command: &apos;cat&apos;)
    ], 
    volumes: [
    persistentVolumeClaim(mountPath: &apos;/home/jenkins/dev-jenkins/workspace/&apos; + env.JOB_NAME, claimName: &apos;pso-fb&apos;, readOnly: false)
//    persistentVolumeClaim(mountPath: &apos;/home/jenkins/dev-jenkins&apos;, claimName: &apos;pso-fb&apos;, readOnly: false)
    ],
    imagePullSecrets: [ &apos;myregistrykey&apos; ])
   
    {
    node(label) {
        stage(&apos;Clone Repository&apos;) {
            container(&apos;buildubuntu&apos;) {
                dir(env.BUILD_NUMBER + &apos;/build&apos;) {
                    git branch: &apos;master&apos;, credentialsId: &apos;4063a731-7121-487c-918c-93c2f103d1c7&apos;, url: &apos;http://10.21.236.87:8080/root/ubuntu-xenial.git&apos;
                }
            }
        }
        
        stage(&apos;Build project&apos;) {
            container(&apos;buildubuntu&apos;) {
                dir(env.BUILD_NUMBER + &apos;/build&apos;) {
                sh &apos;fakeroot debian/rules clean&apos;
                sh &apos;fakeroot debian/rules binary-headers binary-generic binary-perarch&apos;
                }
            }
        }
            
            // Create tar.gz package.
            
        stage(&apos;Create Package&apos;) {
            container(&apos;buildubuntu&apos;) {
                dir(env.BUILD_NUMBER + &apos;/build&apos;) {
                //sh &apos;ls ../&apos;
                sh &quot;tar -czvf kern-package.tar.gz ../*.deb&quot;
                }
            }
        }
        
        // Upload to Nexus
        stage(&apos;Add to Nexus artifacts&apos;) {
            container(&apos;buildubuntu&apos;) {
                dir(env.BUILD_NUMBER + &apos;/build&apos;) {
//                    nexusArtifactUploader artifacts: [[artifactId: &apos;kl_artId1&apos;, classifier: &apos;kern-package&apos;, file: &apos;README&apos;, type: &apos;txt&apos;]], credentialsId: &apos;d47d3a3d-83dc-440d-9bca-31e14062ae40&apos;, groupId: &apos;Kernel&apos;, nexusUrl: &apos;$NEXUS_IP&apos;, nexusVersion: &apos;nexus3&apos;, protocol: &apos;http&apos;, repository: &apos;kernel&apos;, version: &apos;1.0.0.&apos;+env.BUILD_NUMBER
                    nexusArtifactUploader artifacts: [[artifactId: &apos;kl_artId1&apos;, classifier: &apos;kern-package&apos;, file: &apos;kern-package.tar.gz&apos;, type: &apos;tar.gz&apos;]], credentialsId: &apos;d47d3a3d-83dc-440d-9bca-31e14062ae40&apos;, groupId: &apos;Kernel&apos;, nexusUrl: &apos;10.21.236.86&apos;, nexusVersion: &apos;nexus3&apos;, protocol: &apos;http&apos;, repository: &apos;kernel&apos;, version: &apos;1.0.0.&apos;+env.BUILD_NUMBER
                }
            }
        }
    }
  }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>